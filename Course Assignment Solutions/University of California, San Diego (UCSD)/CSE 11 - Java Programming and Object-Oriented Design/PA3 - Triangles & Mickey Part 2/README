PROGRAM DESCRIPTION
    The first program (Triangles) displays a pretty triangle pattern using star
 shapes (*). The triangles look like this: |\ |/ \| /|. The program uses nested
 while loops (while loops within while loops: while-ception) to create the user
 defined triangles. All the user has to do is specify a size (width).

  USAGE: java Triangles
         (after that, just follow the prompts)


    The second program (Mickey) is an applet that, on a canvas specified, draws
 a Mickey face, one mouse click, that can be dragged around by the user. I used
 a toggle (isMickey = true means a Mickey exists) so that on a mouse click, the
 new silhouette is created ONLY if isMickey = false. This ensures that only one
 Mickey is displayed with any number of mouse clicks. To prevent any exceptions
 from being thrown in the terminal window when the mouse is moved in and out of
 the canvas, I used the isMickey toggle to ensure that Mickey is showing (or is
 not showing, if need be) before it is cleared or is created. Instead of just a
 single .java file, this program is made of two .java files: the first (Mickey)
 simply defines the Mickey figure, and the second (MickeyController) is the one
 that actually handles mouse events and controls what we see.

  USAGE: appletviewer Mickey.html
         (or just view Mickey.html in a web browser)

  On Start: Show instructions

  On Click: If there are instructions, hide them
            If there is no Mickey, create one
            If there is a Mickey and it is clicked on, consider it "grabbed"
            If Mickey was clicked on for more than 500 ms, flip it
            If a Mickey is flipped, change its color (cycle through colors)

  On Drag:  If Mickey is grabbed, move it as the mouse moves

  On Exit Canvas:  If there is a Mickey, clear it
  On Enter Canvas: If there are no instructions, show them
                   If there is no Mickey, create one
   

SHORT RESPONSE QUESTIONS
 1. You can jump to a certain line number in your code using a single command
    in vim by typing ":*line number*". For example, to jump to line 20:
      :20

 2. To set Auto-Indentation in vim,   type ":set ai".
    To unset Auto-Indentation in vim, type ":set paste".

 3. To undo changes in vim, type "u".

 4. To move forward one word in a line of code,  type "w".
    To move backward one word in a line of code, type "b".

 5. To remove all .class files in a Unix directory, type "rm *.class".

 6. To remove a Unix directory, type "rmdir *directoryname*".
    For example, to remove a folder named "tmp", type "rmdir tmp".

 7. The command to clear a Unix terminal screen is "clear".
