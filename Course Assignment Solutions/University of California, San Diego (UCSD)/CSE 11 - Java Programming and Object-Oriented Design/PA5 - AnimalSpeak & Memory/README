PROGRAM DESCRIPTION
    For this assignment, we were to first create "AnimalCard" interfaces: basic
 templates (pretty much) for the specific animals we later created. The animals
 were: Cow, Duck, Kitty, Lamb, Lion, and Puppy. Each of these animals were made
 into their own Java files, and each was given its own unique sound (e.g. kitty
 was "Meow"). We then used these cards for two applets:

    The first applet was AnimalSpeak. When the applet runs, all 6 animals first
 laid out in two rows of three animals. The program asks the user "Which animal
 says *animalnoise*?" The animal noise asked is randomly chosen. Then, the user
 clicks on the animal he/she thinks says that noise. If user's choice is wrong,
 the clicked-on animal gets a red border and the user is told to try again. The
 user can either click on another animal, or he/she can click in the white area
 to clear the highlighting and the message. If the user chooses correctly, that
 animal gets a green border, and the user gets a Correct message. The user then
 can click anywhere to start over, and a new noise will be randomly chosen.

  USAGE: appletviewer AnimalSpeak.html
         (or just view AnimalSpeak.html in a web browser)

  On Start:   Show the 6 animals and ask the user the noise

  On Click:   If right animal clicked, highlight green and give right message
              If wrong animal clicked, highlight red and give wrong message
              On click after right animal choice, restart game

    The second applet was Memory. When the applet runs, it makes 2 of each card
 and shuffles them randomly (face-down). The user clicks on on one of the cards
 and it flips. The user clicks on a second card and it also flips. If the cards
 match, they both get a green highlight and stay face up. If not, they both get
 a red highlight and are flipped down on the next mouse click. The user can try
 again. The game is over when all cards are flipped. On a match, the sound that
 is associated with that animal is shown.

  USAGE: appletviewer Memory.html
         (or just view Memory.html in a web browser)

  On Start:   Show the 12 cards hidden

  On Click:   If no cards or one card are flipped, flip the clicked card
              If there is a mismatch, click anywhere flips down the two cards

SHORT RESPONSE QUESTIONS
 1. '$' takes the cursor to the end of a line in vim.
    '0' takes the cursor to the beginning of a line in vim.

 2. 'V' highlights/selects an entire line in vim.

 3. To change all characters in a line to lowercase, use V to highlight the
    entire line (as in #2), and then use 'u' to change to lowercase.

    To change all characters in a line to uppercase, use V to highlight the
    entire line (as in #2), and then use 'U' to change to uppercase.

 4. A static variable is shared by all instances of the class it is in, and
    it doesn't need any object.

 5. A static method belongs to the class, but not to the object itself. The
    static method can ONLY access static data and ONLY call static methods.
      EXAMPLE: Math.random();
      This is useful so that we can write a widely useful method once, then
      just access that same method over and over again in whatever class.

 6. Overriding is when a certain method already exists in a superclass, but
    you create one of the same signature (name + number and type of params)
    to run instead.
      EXAMPLE: onMouseClick() is a method that is a part of objectdraw, but
               we overrided it in all of our applets so far to do something
               specific that we want to be done on a mouse click.
