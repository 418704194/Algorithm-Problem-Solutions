PROGRAM DESCRIPTION
    The first program (TwoSmallest) has the user input (multiple) integers. The
 program then returns the two smallest distinct integers (no repeats) that were
 typed. If there is only 1 distinct integer, it will only return that one value
 and if nothing was inputted, it will print an error message. To stop inputting
 values, the user presses the EOF (in my case, CTRL+D). To ensure that the user
 receives the right response, I created a counter that tracks how many integers
 the user has correctly inputted and used if-else statements to check and store
 (or not store) numbers. Three integer variables were used: one stores the most
 current user input, one stores the lowest number, one stores the 2nd lowest.
  1 Integer:  Return that integer
  2 Integers: Return the smaller integer, and then the bigger integer
  Multiple:   Return the smallest integer, and then the 2nd smallest integer
  Nothing:    Return an error message

    The second program (Mickey) is an applet that, on a canvas specified, draws
 a Mickey face, one mouse click, that can be dragged around by the user. I used
 a toggle (isMickey = true means a Mickey exists) so that on a mouse click, the
 new silhouette is created ONLY if isMickey = false. This ensures that only one
 Mickey is displayed with any number of mouse clicks. To prevent any exceptions
 from being thrown in the terminal window when the mouse is moved in and out of
 the canvas, I used the isMickey toggle to ensure that Mickey is showing (or is
 not showing, if need be) before it is cleared or is created.
  On Start: Show instructions
  On Click: If there are instructions, hide them
            If there is no Mickey, create one
            If there is a Mickey and it is clicked on, consider it "grabbed"
  On Drag:  If Mickey is grabbed, move it as the mouse moves

  On Exit Canvas:  If there is a Mickey, clear it
  On Enter Canvas: If there are no instructions, show them
                   If there is no Mickey, create one
   

SHORT RESPONSE QUESTIONS
 1. The Linux command to rename a file is "mv".  USAGE: "mv *file* *newName*"
    The Linux command to copy a file is "cp".    USAGE: "cp *file* *newFile*"

 2. On the VIM that I am using from the computer lab, when I highlight text &
    then middle click in Insert Mode, the middle click simply highlights from
    where my original highlight was up to where I middle clicked.
    
    HOWEVER, I have read online that the original (possibly correct) function
    when a user highlights and then middle clicks in Insert Mode is to simply
    paste (highlight copies, middle click pastes).

    I'm not sure if this version of VIM is different than the one many people
    the internet are using, but I have tested this on multiple machines.

 3. The application that processes command line commands is called "cmd"
    (cmd.exe).

 4. The following are ways to get into Insert Mode in vim:
      1) Click "a" (append after cursor)
      2) Click "i" (insert before cursor)
      3) Click "A" (shift+a) (append at end of line
    There are more ways, but the question asked only for three.

 5. You can switch from Insert Mode to Command Mode by hitting the "Esc" key.

 6. The vim command ":split" divides VIM into multiple panes, and each of the
    panes can display a file.

 7. A "method" in programming languages is the actual function or subroutine.
    In other words, a "method" is a sequence of commands or programming code.
