medianString( seqs, k ):
    distance = ∞
    median = ""
    for all 4^k possible kmers 'pattern':
        d = d(pattern,seqs)
        if d <= distance:
            distance = d
            median = pattern
    return median

d( pattern, seqs ):
    sum = 0
    for i from 0 to (|seqs|-1):
        sum = sum + d(pattern,seqs[i])
    return sum

d( pattern, seq ):
    k = |pattern|
    min = ∞
    for i from 0 to (|text|-k):
        curr = text[i ... (i+k)]
        hamming = hammingDistance(pattern,curr)
        if hamming < min:
            min = hamming
    return min

hamming_distance( p, q ):
    mismatch = 0
    for i from 0 to |p|-1:
        if p[i] != q[i]:
            mismatch = mismatch + 1
    return mismatch