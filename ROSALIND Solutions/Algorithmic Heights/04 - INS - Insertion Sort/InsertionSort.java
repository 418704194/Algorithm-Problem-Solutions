public class InsertionSort {
  public static void main( String[] args ) {
    int[] arr = {-39559,-43377,43368,-13424,-3615,3716,84032,-28548,66125,-3257,-50833,-14356,9803,62411,-85982,97529,18334,-67723,-72140,-47851,78855,28169,-90586,-71886,-61292,57229,72016,87363,36837,69447,-55424,-75100,-92813,67235,-11445,73207,92738,73641,-72225,-11879,24476,51145,-41755,67291,66551,44134,86423,89945,94022,81149,61147,-40015,14951,-86392,-70389,-83125,-71519,-53639,-47361,93066,55578,11003,4356,-19497,13973,-85652,33245,696,-83441,90915,-67518,-85425,9616,-99735,56538,-18696,-1152,68897,-92483,15729,58526,-78492,-12227,-91086,56031,-88280,-45901,91635,-80916,-47200,-39533,-47380,-23450,-59950,-2648,42619,10042,1773,26400,-54871,45445,63868,-54683,-11957,59994,-50242,-22338,-36479,96448,-11161,7164,84670,-39088,28740,80520,94626,88547,-30556,16576,71482,24051,31306,-15921,79735,74859,-53520,-19096,31889,-11836,16869,31059,77485,-71484,-19534,96221,-45797,3843,-27996,81653,-12486,-16272,68091,82800,-22395,-56910,-51379,-57218,-16178,-70589,78122,56927,36860,-9926,41120,-64647,46152,-76316,-22006,19608,-87958,72021,-7209,-90928,87327,-66160,9289,-15443,3253,-37006,67101,-20694,7979,86819,-38346,95260,42178,-64549,24931,37471,-26572,8864,-12064,19478,-2840,96506,-67559,48003,-73195,-8668,-34370,51807,-79223,46257,99976,68046,50700,-54470,-75592,87947,23777,85859,-67060,-77269,-71077,55752,-99028,-88424,71459,74808,40098,72857,17813,64869,-54528,-4110,-35633,94235,-41483,-58724,43740,-41445,61096,-75211,-10024,-55352,-93437,-52011,77731,-66006,5795,61003,-34552,95629,-62032,-7551,27983,-24724,18121,53314,-69291,-34386,-16696,-49426,-17851,92057,2730,41417,-85955,25102,-43806,39973,95902,41841,57050,40681,13974,-39645,40043,29881,-31304,93389,-33817,-76286,-80442,59286,-60789,-45262,69915,-3587,-22018,51969,-31351,9701,-65534,72638,-60759,-98,93024,45640,61080,27044,-18339,64129,-85411,-71725,80411,34868,-60496,-2390,-94523,28416,72747,-58120,61890,66877,94152,-56687,54467,66982,44480,39055,66215,96151,63490,-12812,15820,38214,38426,-17510,68911,-14422,-55340,28354,503,-90761,99303,-1496,80219,71254,-57799,61622,14271,-95645,-20992,-87985,-75339,-8585,-7309,83919,-13129,-23891,21451,19651,-52753,78744,26248,-61355,-14387,-40955,1975,-56380,82216,68354,-28500,-45171,16001,-89098,-5049,9720,-29410,-68414,-17953,-40550,28882,40351,-89539,-96067,26947,80424,-28422,81410,-97960,33759,46376,95558,53229,-37322,-83196,-37635,-48927,-44132,-1957,16382,86702,8866,8959,15922,-21660,-28952,21425,20332,-61588,75380,-31206,6095,-48770,44004,-85339,50732,-75263,-9634,-78089,-94635,-62676,60114,69876,44435,11316,-56649,-23476,-6216,-73698,-77311,16181,-97464,-97747,33949,-36511,37801,-56280,-9083,52385,54369,24736,-92065,67093,-61866,41122,-2081,-53631,1190,267,6033,41520,87143,-61029,72195,-19873,1465,60939,92086,25727,97630,-56384,2064,57394,47210,22898,-2266,11820,84605,-79623,-44238,36932,-66921,17920,55119,-14521,-96705,33967,-5407,-43902,57206,-92072,-94305,62987,-97973,-48458,80148,85919,-98037,-96265,80178,-94012,89488,-95359,-62784,-63334,87038,-10507,49528,-53297,13948,87448,-54492,74349,-859,77526,17117,-76970,-3945,-34311,-56597,-6711,45650,-29493,95534,22080,28322,-36296,-35697,24359,-65828,-49141,97662,86529,93511,-89905,14484,61398,-5584,32058,31411,-82159,41906,94674,-17518,18360,-32682,30408,-91752,-69335,62870,-71906,98959,-49203,-54410,56709,-77166,85692,-16372,-7764,-44155,21611,49203,-10001,70598,35475,-53086,39608,83714,82950,1452,-88981,-31699,33909,35858,-8856,-83170,9935,12869,36095,29234,-31541,76596,-57782,29533,81177,31016,90163,-64363,-25261,97315,-80675,-9375,-70625,-28648,39419,84914,-4891,38541,5915,61981,-54905,-7348,-53119,-75424,34286,-72308,99861,44982,49853,86482,-88976,-69546,-86672,24122,30405,-71129,-26132,37702,4085,6431,43547,-57574,74430,33084,-68283,-45066,78102,-57468,-77283,82701,-72404,88906,-59079,12780,-18158,-17021,73352,-3963,-48616,-29465,17686,669,-61172,41870,-61744,-28602,92195,-78885,12372,-76917,-57712,-33261,-51262,97986,45115,86997,-10732,56559,45357,79547,-92159,57113,67295,13003,-89658,3831,-81625,-88078,39503,-51148,23960,60169,37356,22779,3972,-31291,15091,-60141,79908,37186,-45822,19459,34556,42770,-75156,-82363,-7520,13535,92203,97247,88513,-43887,-25369,-54174,48401,44039,8417,-74252,47373,31266,9895,25245,64264,-45528,59994,-83440,-56037,-3,41013,54194,-71463,-12952,36862,-39569,7454,-92112,51423,24184,530,51897,46787,19340,-64336,12787,65948,91726,26834,-56153,7990,-67691,60244,63457,-59879,-15737,36136,-83573,-65964,67444,-67368,-90225,-45712,93218,3380,2073,-61322,64320,94204,67759,21603,-27350,42952,-77039,-54381,74537,463,-52197,58574,24641,-97120,67785,-81736,-25261,90479,-46140,79510,46070,26151,35596,-39809,-75011,-84959,-26849,-9455,19061,-52448,72895,-75011,87761,86558,-86801,-80707,49440,663,5985,44545,-24730,43936,98995,-10571,7861,88166,-5604,16311,24200,98782,-49443,20545,20577,-59879,-44123,49705,-4986,-19449,36545,-64864,89230,-74221,50745,-15389,15967,-39653,-62975,76799,40118,-80938,14490,39419,-17260,-57496,-85760,44316,29826,33383,-36860,17706,7655,-38840,-85809,16382,68947,-68143,65326,-57483,-96064,-62566,-33679,60659,-58469,18479,-90864,3206,83029,91307,-57096,-640,-3425,-92269,34074,-39149,44285,5186,32961,-76512,97442,22667,85049,-19946,25668,-32532,44611,19485,-84451,-61502,21465,87231,38876,-27700,83396,49654,62925,-88251,-2888,-20343,-85652,91552,-48501,-13971,-31835,26319,85447,56665,-74118,-13002,98271,74799,34595,-16312,-14305,-69842,6915,-61226,-27656,-59611,33122,-72040,-92135,-57300,-39722,99045,77825,-32762,-98814,95832,13487,-73370,-808,-74655,-13722,-48309,-87821,-67193,73816,-37373,-93735,52450,29983,-83375,-3396,48123,24649,50719,92999,39483,58140,-77232,55177,-3208,44729,-70477,-76159,-56857,93447,-86557,-19017,27968,12080,-18388,-22099,-25491,8231,-15593,50317,74302,82147,54091,-33624,22676,-14692,42622,-56746,77656,46359,18023,-73643,86424,-51827,65112,23488,22005,-12544,32916,76715,74249,14358,33844,5138,-89881,-27667,23217,79652,39506,3765,77268,18107};
    System.out.println(insertionSortSwaps(arr));
  }
  
  public static int insertionSortSwaps( int[] arr ) {
    int swaps = 0;
    for(int i = 1; i < arr.length; ++i) {
      int k = i;
      while(k > 0 && arr[k] < arr[k-1]) {
        int temp = arr[k];
        arr[k] = arr[k-1];
        arr[k-1] = temp;
        --k;
        ++swaps;
      }
    }
    return swaps;
  }
}